{"version":3,"sources":["Signup.js","SplashScreen.js","Map.js","FoodBankList.js","Cart.js","ItemList.js","Browse.js","App.js","serviceWorker.js","index.js"],"names":["Substitutions","props","Tooltip","Signup","useState","addrShown","setAddrShown","pwordHidden","setPwordHidden","form","React","useRef","first","last","dob","phone","email","emailMatch","pword","pwordMatch","state","checkForm","emailDoesMatch","current","value","setCustomValidity","pwordDoesMatch","Modal","show","onHide","close","size","centered","Header","closeButton","Title","Body","Form","className","ref","onSubmit","event","preventDefault","checkValidity","console","log","success","classList","add","noValidate","Row","Group","as","Col","md","Label","Control","type","placeholder","required","min","max","pattern","maxLength","onChange","match","onInput","InputGroup","minLength","Append","onClick","Text","Check","name","inline","label","checked","hidden","color","OverlayTrigger","placement","delay","hide","overlay","href","defaultChecked","Button","SplashScreen","signupShown","setSignupShown","loginSuccess","setLoginSuccess","from","to","Jumbotron","Container","id","target","document","querySelector","fetch","then","res","json","data","Digest","catch","error","Prepend","Map","initialize","a","window","location","setTimeout","forceUpdate","map","google","maps","center","pos","zoom","banks","forEach","bank","getGeocode","marker","Marker","position","title","addListener","select","setState","toBrowse","markers","push","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","this","Component","FoodBankList","geocoder","Promise","resolve","reject","geocode","address","city","zip","result","status","geometry","setLocation","response","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lng","longitude","Geocoder","expanded","loaded","mapRef","createRef","fluid","Collapse","lg","in","ListGroup","variant","Item","key","Cart","cart","length","elem","indexOf","item","count","Footer","ItemList","inventory","entry","decrease","itemCounts","get","increase","Browse","items","datapoint","fres","fdata","qty","set","decreaseItemCount","dict","increaseItemCount","maxval","parseInt","totalCount","total","v","k","m","cartShown","App","currentBank","exact","path","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3a24b744.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Modal, Form, Button, Row, Col, OverlayTrigger, Tooltip, InputGroup} from 'react-bootstrap';\r\nimport {FaLeaf, FaCarrot} from 'react-icons/fa';\r\nimport {AiOutlineEye, AiOutlineEyeInvisible} from 'react-icons/ai';\r\n\r\nimport './Signup.css';\r\n\r\nfunction Substitutions(props) {\r\n   return (\r\n      <Tooltip {...props}>\r\n         Substitute any foods you have dietary restrictions against\r\n         with foods that you can eat.\r\n      </Tooltip>\r\n   );\r\n}\r\n\r\nfunction Signup(props) {\r\n   const [addrShown, setAddrShown] = useState(false);\r\n   const [pwordHidden, setPwordHidden] = useState(true);\r\n   const form = React.useRef(null);\r\n   const first = React.useRef(null);\r\n   const last = React.useRef(null);\r\n   const dob = React.useRef(null);\r\n   const phone = React.useRef(null);\r\n   const email = React.useRef(null);\r\n   const emailMatch = React.useRef(null);\r\n   const pword = React.useRef(null);\r\n   const pwordMatch = React.useRef(null);\r\n   const addr1 = React.useRef(null);\r\n   const addr2 = React.useRef(null);\r\n   const city = React.useRef(null);\r\n   const state = React.useRef(null);\r\n   const zip = React.useRef(null);\r\n   const diet = React.useRef(null);\r\n   const sub = React.useRef(null);\r\n\r\n   const checkForm = () => {\r\n      const emailDoesMatch = email.current.value === emailMatch.current.value;\r\n      emailMatch.current.setCustomValidity(emailDoesMatch ? '' : 'invalid');\r\n      const pwordDoesMatch = pword.current.value === pwordMatch.current.value;\r\n      pwordMatch.current.setCustomValidity(pwordDoesMatch ? '' : 'invalid');\r\n      state.current.setCustomValidity(addrShown && state.current.value === 'N/A' ? 'invalid' : '');\r\n   }\r\n\r\n   const submitSignup = event => {\r\n      event.preventDefault();\r\n      checkForm();\r\n      if (form.current.checkValidity()) {\r\n         console.log('valid form: email ('+email.value+') password ('+pword.value+')');\r\n         // try signup to server, return false if bad credentials\r\n         var signupSuccess = true;\r\n         if (signupSuccess) {\r\n            props.success();\r\n         }\r\n      } else {\r\n         console.log('invalid form');\r\n         form.current.classList.add('was-validated');\r\n      }\r\n      return false;\r\n   }\r\n\r\n   return (\r\n      <Modal show={props.show} onHide={props.close} size='lg' centered>\r\n         <Modal.Header closeButton>\r\n            <Modal.Title>Create a new account</Modal.Title>\r\n         </Modal.Header>\r\n         <Modal.Body>\r\n            <Form className='d-flex flex-column' ref={form} onSubmit={submitSignup} noValidate>\r\n               <Form.Row>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>First Name</Form.Label>\r\n                     <Form.Control ref={first} type='text' placeholder='first' required/>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Last Name</Form.Label>\r\n                     <Form.Control ref={last} type='text' placeholder='last' required/>\r\n                  </Form.Group>\r\n               </Form.Row>\r\n               <Form.Row>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Date of Birth</Form.Label>\r\n                     <Form.Control ref={dob} type='date' required min='1920-04-06' max='2002-04-06'/>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Phone Number</Form.Label>\r\n                     <Form.Control ref={phone} type='tel' placeholder='123-456-7890'\r\n                      required pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' maxLength={12}\r\n                      onChange={() => {\r\n                        if (phone.current.value.match('[0-9]{3}-[0-9]{3}') && !phone.current.value.match('[0-9]{3}-[0-9]{3}-')) {\r\n                           phone.current.value += '-';\r\n                        } else if (phone.current.value.match('[0-9]{3}') && !phone.current.value.match('-')) {\r\n                           phone.current.value += '-';\r\n                        } \r\n                      }}/>\r\n                  </Form.Group>\r\n               </Form.Row>\r\n               <Form.Row>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Email</Form.Label>\r\n                     <Form.Control ref={email} type='email' placeholder='email'\r\n                      required onInput={checkForm}/>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Confirm Email</Form.Label>\r\n                     <Form.Control ref={emailMatch} type='email' placeholder='confirm email'\r\n                      required onInput={checkForm}/>\r\n                  </Form.Group>\r\n               </Form.Row>\r\n               <Form.Row>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Password</Form.Label>\r\n                     <InputGroup>\r\n                        <Form.Control ref={pword} type={pwordHidden ? 'password' : 'text'}\r\n                         placeholder='password' required minLength={8} onInput={checkForm}/>\r\n                        <InputGroup.Append onClick={() => setPwordHidden(!pwordHidden)}>\r\n                           <InputGroup.Text>\r\n                              {pwordHidden ? (\r\n                                 <AiOutlineEyeInvisible />\r\n                              ) : (\r\n                                 <AiOutlineEye />\r\n                              )}\r\n                           </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                     </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>Confirm Password</Form.Label>\r\n                     <InputGroup>\r\n                        <Form.Control ref={pwordMatch} type={pwordHidden ? 'password' : 'text'}\r\n                         placeholder='confirm password' required onInput={checkForm}/>\r\n                        <InputGroup.Append onClick={() => setPwordHidden(!pwordHidden)}>\r\n                           <InputGroup.Text>\r\n                              {pwordHidden ? (\r\n                                 <AiOutlineEyeInvisible />\r\n                              ) : (\r\n                                 <AiOutlineEye />\r\n                              )}\r\n                           </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                     </InputGroup>\r\n                  </Form.Group>\r\n               </Form.Row>\r\n               <Form.Group>\r\n                  <Form.Check type='radio' name='addr' inline label='Set permanent address'\r\n                   checked={addrShown} onChange={()=>setAddrShown(true)}/>\r\n                  <Form.Check type='radio' name='addr' inline label='Use current location'\r\n                   checked={!addrShown} onChange={()=>setAddrShown(false)}/>\r\n               </Form.Group>\r\n               <div hidden={!addrShown}>\r\n                  <Form.Group>\r\n                     <Form.Label>Address</Form.Label>\r\n                     <Form.Control type='text' placeholder='address' required={addrShown}/>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                     <Form.Label>Address 2</Form.Label>\r\n                     <Form.Control type='text' placeholder='apartment'/>\r\n                  </Form.Group>\r\n                  <Form.Row>\r\n                     <Form.Group as={Col} md={4}>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='city' required={addrShown}/>\r\n                     </Form.Group>\r\n                     <Form.Group as={Col} md={4}>\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control as='select' ref={state} onChange={checkForm}>\r\n                           <option value=\"N/A\">choose...</option>\r\n                           <option value=\"AL\">Alabama</option>\r\n                           <option value=\"AK\">Alaska</option>\r\n                           <option value=\"AZ\">Arizona</option>\r\n                           <option value=\"AR\">Arkansas</option>\r\n                           <option value=\"CA\">California</option>\r\n                           <option value=\"CO\">Colorado</option>\r\n                           <option value=\"CT\">Connecticut</option>\r\n                           <option value=\"DE\">Delaware</option>\r\n                           <option value=\"DC\">District Of Columbia</option>\r\n                           <option value=\"FL\">Florida</option>\r\n                           <option value=\"GA\">Georgia</option>\r\n                           <option value=\"HI\">Hawaii</option>\r\n                           <option value=\"ID\">Idaho</option>\r\n                           <option value=\"IL\">Illinois</option>\r\n                           <option value=\"IN\">Indiana</option>\r\n                           <option value=\"IA\">Iowa</option>\r\n                           <option value=\"KS\">Kansas</option>\r\n                           <option value=\"KY\">Kentucky</option>\r\n                           <option value=\"LA\">Louisiana</option>\r\n                           <option value=\"ME\">Maine</option>\r\n                           <option value=\"MD\">Maryland</option>\r\n                           <option value=\"MA\">Massachusetts</option>\r\n                           <option value=\"MI\">Michigan</option>\r\n                           <option value=\"MN\">Minnesota</option>\r\n                           <option value=\"MS\">Mississippi</option>\r\n                           <option value=\"MO\">Missouri</option>\r\n                           <option value=\"MT\">Montana</option>\r\n                           <option value=\"NE\">Nebraska</option>\r\n                           <option value=\"NV\">Nevada</option>\r\n                           <option value=\"NH\">New Hampshire</option>\r\n                           <option value=\"NJ\">New Jersey</option>\r\n                           <option value=\"NM\">New Mexico</option>\r\n                           <option value=\"NY\">New York</option>\r\n                           <option value=\"NC\">North Carolina</option>\r\n                           <option value=\"ND\">North Dakota</option>\r\n                           <option value=\"OH\">Ohio</option>\r\n                           <option value=\"OK\">Oklahoma</option>\r\n                           <option value=\"OR\">Oregon</option>\r\n                           <option value=\"PA\">Pennsylvania</option>\r\n                           <option value=\"RI\">Rhode Island</option>\r\n                           <option value=\"SC\">South Carolina</option>\r\n                           <option value=\"SD\">South Dakota</option>\r\n                           <option value=\"TN\">Tennessee</option>\r\n                           <option value=\"TX\">Texas</option>\r\n                           <option value=\"UT\">Utah</option>\r\n                           <option value=\"VT\">Vermont</option>\r\n                           <option value=\"VA\">Virginia</option>\r\n                           <option value=\"WA\">Washington</option>\r\n                           <option value=\"WV\">West Virginia</option>\r\n                           <option value=\"WI\">Wisconsin</option>\r\n                           <option value=\"WY\">Wyoming</option>\r\n                        </Form.Control>\r\n                     </Form.Group>\r\n                     <Form.Group as={Col} md={4}>\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type='text' placeholder='zip' required={addrShown} pattern='[0-9]{5}'/>\r\n                     </Form.Group>\r\n                  </Form.Row>\r\n               </div> \r\n               <Form.Row>\r\n                  <Form.Group as={Col} md={6} className='pl-3'>\r\n                     <Form.Label className='d-block'>Dietary Restrictions</Form.Label>\r\n                     <Form.Row>\r\n                        <Form.Check inline type='checkbox' name='diet' label='Vegan'/>\r\n                        <FaLeaf className='align-self-center' color='green'/>\r\n                     </Form.Row>\r\n                     <Form.Row>\r\n                        <Form.Check inline type='checkbox' name='diet' label='Vegetarian'/>\r\n                        <FaCarrot className='align-self-center' color='orange'/>\r\n                     </Form.Row>\r\n                     <Form.Row>\r\n                        <Form.Check inline type='checkbox' name='diet' label='Gluten Free'/>\r\n                        <FaLeaf className='align-self-center'/>\r\n                     </Form.Row>\r\n                     <Form.Row>\r\n                        <Form.Check inline type='checkbox' name='diet' label='Halal'/>\r\n                        <FaLeaf className='align-self-center'/>\r\n                     </Form.Row>\r\n                     <Form.Row>\r\n                        <Form.Check inline type='checkbox' name='diet' label='Kosher'/>\r\n                        <FaLeaf className='align-self-center'/>\r\n                     </Form.Row>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md={6}>\r\n                     <Form.Label>\r\n                        Opt in for {' '}\r\n                        <OverlayTrigger placement='bottom' delay={ {show: 250, hide: 400} } overlay={Substitutions}>\r\n                           <a href='#' className='text-decoration-none'>substitutions</a>\r\n                        </OverlayTrigger>\r\n                     </Form.Label>\r\n                     <Form.Check type='radio' name='sub' label='Yes' defaultChecked/>\r\n                     <Form.Check type='radio' name='sub' label='No'/>\r\n                  </Form.Group>\r\n               </Form.Row>\r\n               <Button type='submit' className='align-self-center w-50'>Sign up</Button>\r\n            </Form>\r\n         </Modal.Body>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Jumbotron, Button, Container, Row, Form, InputGroup} from 'react-bootstrap';\r\nimport {MdLockOutline} from 'react-icons/md';\r\nimport {FiMail} from 'react-icons/fi';\r\nimport {AiOutlineEye, AiOutlineEyeInvisible} from 'react-icons/ai';\r\n\r\n\r\nimport Signup from './Signup.js';\r\nimport './SplashScreen.css';\r\n\r\nfunction SplashScreen() {\r\n  const [signupShown, setSignupShown] = React.useState(false);\r\n  const [pwordHidden, setPwordHidden] = React.useState(true);\r\n  const [loginSuccess, setLoginSuccess] = React.useState(false);\r\n\r\n  const submitLogin = event => {\r\n    event.preventDefault();\r\n    var form = event.target;\r\n    var email = document.querySelector('#login-email');\r\n    var pword = document.querySelector('#login-pword');\r\n    if (form.checkValidity()) {\r\n      fetch('https://api.hashify.net/hash/sha256/hex?value='+pword.value)\r\n      .then(res => {\r\n        return res.json();\r\n      }).then(data => {\r\n        console.log('valid form: '+email.value+', '+data.Digest);\r\n      }).catch(error => {\r\n        console.log('valid form, hashing failure: '+email.value);\r\n      });\r\n      // try login to server, return false if bad credentials\r\n      var success = true;\r\n      setLoginSuccess(success);\r\n    } else {\r\n      console.log('invalid form');\r\n      form.classList.add('was-validated');\r\n    }\r\n    return false;\r\n }\r\n\r\n  return (\r\n    loginSuccess ? (\r\n      <Redirect from='/' to='/list' />\r\n    ) : (\r\n      <Jumbotron>\r\n        <div className='filter text-white'>\r\n          <Container className='d-flex flex-column text-center'>\r\n            <div id='header'>\r\n              <h1 className='display-4 font-weight-bold pb-3'>Feed the Hungry</h1>\r\n            </div>\r\n            <Row className='align-self-center d-flex justify-content-between'>\r\n              <Form className='d-flex flex-column' id='login-form' onSubmit={submitLogin} noValidate>\r\n                <Form.Group>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>\r\n                        <FiMail />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control placeholder='email' id='login-email' required/>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>\r\n                        <MdLockOutline />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type={pwordHidden ? 'password' : 'text'}\r\n                    placeholder='password' id='login-pword' required/>\r\n                    <InputGroup.Append onClick={() => setPwordHidden(!pwordHidden)}>\r\n                      <InputGroup.Text>\r\n                        {pwordHidden ? (\r\n                          <AiOutlineEyeInvisible />\r\n                        ) : (\r\n                          <AiOutlineEye />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Button type='submit' className='align-self-center w-50 my-3'>Log in</Button>\r\n                <span className='my-3'>\r\n                  No account? <a href='#' onClick={()=>setSignupShown(true)} className='text-decoration-none'>Sign up</a>\r\n                </span>\r\n              </Form>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n        <Signup show={signupShown} close={() => setSignupShown(false)}\r\n          success={() => setLoginSuccess(true)}/>\r\n      </Jumbotron>\r\n    )\r\n  );\r\n}\r\n\r\nexport default SplashScreen;","import React from 'react';\r\nimport 'google-maps';\r\n\r\nimport './Map.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toBrowse: false\r\n    }\r\n    this.map = null;\r\n    this.markers = [];\r\n  }\r\n\r\n  initialize = async() => {\r\n    if (window.location.href != 'https://feed-the-hungry.netlify.com/list') {\r\n      return;\r\n    }\r\n    if (!document.querySelector('#map')) {\r\n      console.log('map not loaded');\r\n      setTimeout(this.forceUpdate, 1000);\r\n      return;\r\n    }\r\n    this.map = new window.google.maps.Map(document.querySelector('#map'), {\r\n      center: this.props.pos,\r\n      zoom: 12\r\n    });\r\n    this.props.banks.forEach(bank => {\r\n      this.props.getGeocode(bank)\r\n      .then(pos => {\r\n        var marker = new window.google.maps.Marker({\r\n          position: pos,\r\n          map: this.map,\r\n          title: bank.name\r\n        });\r\n        marker.addListener('click', () => {\r\n          this.props.select(bank);\r\n          this.setState({toBrowse: true});\r\n        });\r\n        this.markers.push(marker);\r\n      }).catch(error => console.log('geocode failure: '+error));\r\n    });\r\n    new window.google.maps.Circle({\r\n      strokeColor: '#FFFFFF',\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: '#0000FF',\r\n      fillOpacity: 0.35,\r\n      map: this.map,\r\n      center: this.props.pos,\r\n      radius: 100\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initialize()\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toBrowse) {\r\n      console.log('before redirect');\r\n      return <Redirect to='/browse'/>\r\n    }\r\n    return (\r\n      <div id='map'></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Container, Row, ListGroup, Col, Collapse} from 'react-bootstrap';\r\nimport {GoSearch} from 'react-icons/go';\r\nimport {IoIosMenu} from 'react-icons/io';\r\n\r\nimport 'google-maps';\r\nimport Map from './Map.js';\r\n\r\nclass FoodBankList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.geocoder = new window.google.maps.Geocoder();\r\n      this.location = null;\r\n      this.state = {\r\n         expanded: false,\r\n         banks: [],\r\n         loaded: false,\r\n         location: null\r\n      }\r\n      this.mapRef = React.createRef();\r\n   }\r\n\r\n   getGeocode = (bank) => {\r\n      const geocoder = this.geocoder;\r\n     return new Promise(function(resolve, reject) {\r\n       geocoder.geocode({\r\n         address: bank.address+', '+bank.city+', '+bank.state+', '+bank.zip\r\n       }, function(result, status) {\r\n         if (status == 'OK') {\r\n           resolve(result[0].geometry.location);\r\n         } else {\r\n           reject(status);\r\n         }\r\n       });\r\n     });\r\n   }\r\n\r\n   initialize = async(resolve) => {\r\n      const setLocation = (pos) => {this.location = pos};\r\n      let response = await fetch('https://feed-the-hungry.netlify.com/api/banks/');\r\n      let banks = await response.json();\r\n      this.setState({banks: banks});\r\n      if (navigator.geolocation) {\r\n         navigator.geolocation.getCurrentPosition(function(position) {\r\n            var pos = {\r\n               lat: position.coords.latitude,\r\n               lng: position.coords.longitude\r\n            }\r\n            setLocation(pos);\r\n            resolve();\r\n         });\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.initialize(()=>this.setState({loaded: true}));\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      if (this.mapRef.current == null) {\r\n         setTimeout(this.forceUpdate, 1000);\r\n         return;\r\n      } else {\r\n         this.mapRef.current.forceUpdate();\r\n      }\r\n   }\r\n\r\n   render() {\r\n      if (!this.state.loaded) {\r\n         return <h1>Loading...</h1>\r\n      }\r\n      return (\r\n         <Container fluid className='p-0 d-flex flex-column'>\r\n            <Row className='bg-primary w-100 p-3 m-0 d-flex justify-content-between'>\r\n               <h1 className='flex-fill text-center'>Feed the Hungry</h1>\r\n               <Col  className='float-right d-flex justify-content-around'>\r\n                  <IoIosMenu size={48} color='black' className='d-lg-none mx-3'\r\n                   onClick={()=>this.setState({expanded: !this.state.expanded})}/>\r\n                  <GoSearch size={48} color='black'/>\r\n               </Col>\r\n            </Row>\r\n            <Row className='h-100'>\r\n               <Collapse as={Col} lg={4} in={this.state.expanded}>\r\n                  <ListGroup variant='flush' className='p-0 d-lg-inline-block'>\r\n                     {this.state.banks.map(bank => (\r\n                        <ListGroup.Item key={'bank'+bank.id}>\r\n                           <Link to='/browse' className='m-0 d-flex flex-row\r\n                            justify-content-between text-decoration-none'\r\n                            onClick={() => this.props.select(bank)}>\r\n                              <span className='align-self-center p-3 text-dark'>\r\n                                 {bank.name}\r\n                              </span>\r\n                           </Link>\r\n                        </ListGroup.Item>\r\n                     ))}\r\n                  </ListGroup>\r\n               </Collapse>\r\n               <Col lg={8} className='p-0 h-100 d-lg-inline-block'>\r\n                  <Map banks={this.state.banks} select={this.props.select}\r\n                   pos={this.location} getGeocode={this.getGeocode}\r\n                   ref={this.mapRef}/>\r\n               </Col>\r\n            </Row>\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default FoodBankList;","import React from 'react';\r\nimport {Modal, ListGroup} from 'react-bootstrap';\r\n\r\nfunction Cart(props) {\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.hide} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Cart</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {props.cart.length === 0 ? 'Shopping cart empty' : ''}\r\n        <ListGroup variant='flush'>\r\n          {props.cart.map((elem) => \r\n            <ListGroup.Item key={props.cart.indexOf(elem)}>\r\n              {elem.item.name}\r\n              <span className='float-right'>{'x'+elem.count}</span>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {props.cart.length > 0 ? 'Checkout' : ''}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport {FiPlus, FiMinus} from 'react-icons/fi';\r\n\r\nclass ItemList extends React.Component {\r\n  render() {\r\n    return(\r\n      <ListGroup variant='flush' className='flex-fill'>\r\n        {this.props.inventory.map(entry => (\r\n          <ListGroup.Item key={entry.item.name} className='m-0 py-3 d-flex flex-row justify-content-between'>\r\n            <span className='py-3 flex-fill'>\r\n              <div className='align-self-center float-left'>\r\n                {entry.item.name}\r\n              </div>\r\n              <div className='float-right col-6 col-md-3 d-flex justify-content-between'>\r\n                <FiMinus onClick={()=>this.props.decrease(entry.item)} className='align-self-center'/>\r\n                <span className='align-self-center mx-1'>\r\n                  {this.props.itemCounts.get(entry.item)+'/'+entry.max}\r\n                </span>\r\n                <FiPlus onClick={()=>this.props.increase(entry.item, entry.max)} className='align-self-center'/>\r\n              </div>\r\n            </span>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {ListGroup, Container, Row} from 'react-bootstrap';\r\n\r\nimport {IoIosArrowBack} from 'react-icons/io';\r\nimport {FaShoppingCart} from 'react-icons/fa';\r\n\r\nimport Cart from './Cart.js';\r\nimport ItemList from './ItemList.js';\r\n\r\nclass Browse extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         itemCounts: new Map(),\r\n         cartShown: false,\r\n         inventory: [],\r\n         loaded: false\r\n      }\r\n   }\r\n\r\n   initialize = async() => {\r\n      let response = await fetch('https://feed-the-hungry.netlify.com/api/inventory/'+this.props.bank.id+'/');\r\n      let data = await response.json();\r\n      console.log('got inventory');\r\n      var inventory = [];\r\n      var items = new Map();\r\n      data.forEach(async(datapoint) => {\r\n         let fres = await fetch('https://feed-the-hungry.netlify.com/api/food/'+datapoint.id+'/');\r\n         let fdata = await fres.json();\r\n         console.log('got food item');\r\n         var entry = {\r\n            item: fdata,\r\n            qty: datapoint.qty,\r\n            max: datapoint.max\r\n         }\r\n         inventory.push(entry);\r\n         items.set(fdata, 0);\r\n         this.setState({inventory: inventory, itemCounts: items})\r\n      });\r\n      console.log(items);\r\n      this.setState({\r\n         inventory,\r\n         itemCounts: items\r\n      }, () => {\r\n         this.setState({loaded: true});\r\n         this.forceUpdate();\r\n      });\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.initialize();\r\n   }\r\n   componentDidUpdate() {\r\n      console.log(this.state.loaded);\r\n      console.log(this.state.inventory);\r\n      console.log(this.state.itemCounts);\r\n   }\r\n\r\n   decreaseItemCount = (item) => {\r\n      var dict = new Map(this.state.itemCounts);\r\n      dict.set(item, dict.get(item) > 0 ? dict.get(item)-1 : 0);\r\n      this.setState({itemCounts: dict});\r\n   } \r\n   increaseItemCount = (item, max) => {\r\n      var dict = new Map(this.state.itemCounts);\r\n      var maxval = parseInt(max);\r\n      dict.set(item, dict.get(item) < maxval ? dict.get(item)+1 : maxval);\r\n      this.setState({itemCounts: dict});\r\n   } \r\n   totalCount = () => {\r\n      var total = 0;\r\n      this.state.itemCounts.forEach((v, k, m) => {\r\n         total += v;\r\n      });\r\n      return total;\r\n   }\r\n\r\n   cart = () => {\r\n      var cart = [];\r\n      this.state.itemCounts.forEach((v, k, m) => {\r\n         if (v > 0) {\r\n            cart.push({item: k, count: v});\r\n         }\r\n      });\r\n      return cart;\r\n   }\r\n\r\n   render() {\r\n      if (!this.state.loaded) {\r\n         return <h1>Loading...</h1>;\r\n      }\r\n      return (\r\n         <Container fluid>\r\n            <Row className='d-flex justify-content-around bg-primary p-3'>\r\n               <Link to='/list'>\r\n                  <IoIosArrowBack size={48} color='black'/>\r\n               </Link>\r\n               <h1>{this.props.bank.name}</h1>\r\n               <span>\r\n                  <FaShoppingCart onClick={() => this.setState({cartShown: true})}\r\n                   size={48} className='m-0 p-0'/>\r\n                  <p className='h3 d-inline'>{this.totalCount()}</p>\r\n               </span>\r\n            </Row>\r\n            <Container>\r\n               <ItemList inventory={this.state.inventory} increase={this.increaseItemCount}\r\n                decrease={this.decreaseItemCount} itemCounts={this.state.itemCounts}/>\r\n            </Container>\r\n            <Cart hide={()=>this.setState({cartShown: false})}\r\n             show={this.state.cartShown} cart={this.cart()}/>\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Browse;","import React, {Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport SplashScreen from './SplashScreen.js';\r\nimport FoodBankList from './FoodBankList.js';\r\nimport Browse from './Browse.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentBank: {id: 0, name: 'Food Not Bombs'}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://feed-the-hungry.netlify.com/api/banks/0/')\r\n    .then(res => res.json().then(data => {\r\n      this.setState({currentBank: data});\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route exact path='/'>\r\n          <SplashScreen />\r\n        </Route>\r\n        <Route exact path='/list'>\r\n          <FoodBankList select={bank => this.setState({currentBank: bank})}/>\r\n        </Route>\r\n        <Route exact path='/browse'>\r\n          <Browse bank={this.state.currentBank}/>\r\n        </Route>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}